import java.awt.List;
import java.util.Iterator;

public class MyTester {

    public static void main(String[] args) {
        LinkedList<Integer> listInt = new LinkedList<>();
        // test 1.1 add
        int expectedInt = 15;
        int actualInt = 0;
        listInt.add(1);
        listInt.add(2);
        listInt.add(3);
        listInt.add(4);
        listInt.add(5);
        for (int i = 0; i < listInt.size(); i++) {
            actualInt += listInt.get(i);
        }
        System.out.print("Test 1.1 add");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 1.2 add
        expectedInt = 0;
        actualInt = 0;
        listInt.add(-1);
        listInt.add(-2);
        listInt.add(-3);
        listInt.add(-4);
        listInt.add(-5);
        for (int i = 0; i < listInt.size(); i++) {
            actualInt += listInt.get(i);
        }
        System.out.print("Test 1.2 add");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 1.3 add
        LinkedList<String> listStr = new LinkedList<>();
        String expectedStr = "ABC";
        String actualStr = "";
        listStr.add("A");
        listStr.add("B");
        listStr.add("C");
        for (int i = 0; i < listStr.size(); i++) {
            actualStr += listStr.get(i);
        }
        System.out.print("Test 1.3 add");
        if (expectedStr.equals(actualStr))
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 2.1 iterator 
        Iterator<Integer> intIt = listInt.iterator();
        expectedInt = 0;
        actualInt = 0;
        while(intIt.hasNext()) {
            actualInt += intIt.next();
        }
        System.out.print("Test 2.1 iterator");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 2.2 iterator 
        intIt = listInt.iterator();
        while(intIt.hasNext()) {
            intIt.next();
            intIt.remove();
        }
        System.out.print("Test 2.2 iterator");
        if (listInt.size() == 0)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 2.3 iterator 
        Iterator<String> strIt = listStr.iterator();
        expectedInt = listStr.size();
        while(strIt.hasNext()) {
            strIt.next();
        }
        actualInt = listStr.size();
        System.out.print("Test 2.3 iterator");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 3.1 insert
        for (int i = 0 ; i < 3; i++) {
            listInt.add(0);
        }
        expectedInt = listInt.size() + 1;
        listInt.insert(3, 0);
        actualInt = listInt.size();
        System.out.print("Test 3.1 insert");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 3.2 insert
        listInt.insert(3, 5);
        expectedInt = 5;
        actualInt = 0;
        for (int i = 0 ; i < listInt.size(); i++) {
            actualInt += listInt.get(i);
        }
        System.out.print("Test 3.2 insert");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 3.1 insert
        listInt.insert(0, 5);
        expectedInt = 10;
        actualInt = 0;
        for (int i = 0 ; i < listInt.size(); i++) {
            actualInt += listInt.get(i);
        }
        System.out.print("Test 3.3 insert");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 4.1 set
        listInt.set(0, 0);
        expectedInt = 5;
        actualInt = 0;
        for (int i = 0 ; i < listInt.size(); i++) {
            actualInt += listInt.get(i);
        }
        System.out.print("Test 4.1 set");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 4.2 set
        listInt.set(4, 0);
        expectedInt = 0;
        actualInt = 0;
        for (int i = 0 ; i < listInt.size(); i++) {
            actualInt += listInt.get(i);
        }
        System.out.print("Test 4.2 set");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 4.3 set
        expectedInt = listInt.size();
        listInt.set(0, -10);
        actualInt = listInt.size();
        System.out.print("Test 4.3 set");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 5.1 remove(pos)
        listStr = new LinkedList<String>();
        listStr.add("Zero");
        listStr.add("One");
        listStr.add("Two");
        listStr.add("Three");
        listStr.remove(3);
        expectedStr = "ZeroOneTwo";
        actualStr = "";
        for (int i = 0 ; i < listStr.size(); i++) {
            actualStr += listStr.get(i);
        }
        System.out.print("Test 5.1 remove(pos)");
        if (actualStr.equals(expectedStr))
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 5.2 remove(pos)
        listStr.remove(0);
        expectedStr = "OneTwo";
        actualStr = "";
        for (int i = 0 ; i < listStr.size(); i++) {
            actualStr += listStr.get(i);
        }
        System.out.print("Test 5.2 remove(pos)");
        if (actualStr.equals(expectedStr))
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 5.3 remove(pos)
        expectedInt = listStr.size() - 1;
        listStr.remove(1);
        actualInt = listStr.size();
        System.out.print("Test 5.3 remove(pos)");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 6.1 remove(E)
        expectedStr = "One";
        actualStr = ""; 
        listStr.remove("Two");
        for (int i = 0 ; i < listStr.size(); i++) {
            actualStr += listStr.get(i);
        }
        System.out.print("Test 6.1 remove(E)");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 6.2 remove(E)
        expectedStr = "";
        actualStr = ""; 
        listStr.remove("One");
        for (int i = 0 ; i < listStr.size(); i++) {
            actualStr += listStr.get(i);
        }
        System.out.print("Test 6.2 remove(E)");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 6.3 remove(E)
        boolean expectedBool = false;
        boolean actualBool = listStr.remove("#$@#@$");
        System.out.print("Test 6.3 remove(E)");
        if (expectedBool == actualBool)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 7.1 getSubList
        listStr.add("0");
        listStr.add("1");
        listStr.add("2");
        listStr.add("3 - Start");
        listStr.add("4");
        listStr.add("5");
        listStr.add("6 - Stop");
        expectedStr = "3 - Start45";
        actualStr = "";
        IList<String> result = listStr.getSubList(3, 6);
        for (int i = 0 ; i < result.size(); i++) {
            actualStr += result.get(i);
        }
        System.out.print("Test 7.1 getSubList");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 7.2 getSubList
        expectedStr = "";
        actualStr = "";
        result = listStr.getSubList(6, 6);
        for (int i = 0 ; i < result.size(); i++) {
            actualStr += result.get(i);
        }
        System.out.print("Test 7.2 getSubList");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 7.3 getSubList
        listStr.add("0");
        listStr.add("1");
        listStr.add("2");
        listStr.add("3 - Start");
        listStr.add("4");
        listStr.add("5");
        listStr.add("6 - Stop");
        expectedStr = "0123 - Start456 - Stop";
        actualStr = "";
        result = listStr.getSubList(0, 7);
        for (int i = 0 ; i < result.size(); i++) {
            actualStr += result.get(i);
        }
        System.out.print("Test 7.3 getSubList");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 8.1 indexOf(E)
        listStr = new LinkedList<String>();
        listStr.add("Zero");
        listStr.add("One");
        listStr.add("Two");
        listStr.add("Three");
        listStr.add("Four");
        listStr.add("Five");
        expectedInt = 5;
        actualInt = listStr.indexOf("Five");
        System.out.print("Test 8.1 indexOf(E)");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 8.2 indexOf(E)
        expectedInt = -1;
        actualInt = listStr.indexOf("Ten");
        System.out.print("Test 8.2 indexOf(E)");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 8.3 indexOf(E)
        expectedInt = 0;
        actualInt = listStr.indexOf("Zero");
        System.out.print("Test 8.3 indexOf(E)");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 9.1 indexOf(E, pos)
        expectedInt = 5;
        actualInt = listStr.indexOf("Five", 5);
        System.out.print("Test 9.1 indexOf(E, pos)");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 9.2 indexOf(E, pos)
        expectedInt = 5;
        actualInt = listStr.indexOf("Five",0);
        System.out.print("Test 9.2 indexOf(E, pos)");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 9.3 indexOf(E, pos)
        expectedInt = -1;
        actualInt = listStr.indexOf("Ten", 0);
        System.out.print("Test 9.3 indexOf(E, pos)");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 10.1 makeEmpty
        listStr.makeEmpty();
        expectedInt = 0;
        actualInt = listStr.size();
        System.out.print("Test 10.1 makeEmpty");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 10.2 makeEmpty
        listStr.makeEmpty();
        expectedInt = 0;
        actualInt = listStr.size();
        System.out.print("Test 10.2 makeEmpty");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 10.3 makeEmpty
        for (int i = 0; i < 10000; i++) {
            listStr.add(i + i/2 * 5 * i + "");
        }
        listStr.makeEmpty();
        expectedInt = 0;
        actualInt = listStr.size();
        System.out.print("Test 10.3 makeEmpty");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 11.1 removeRange
        listInt.makeEmpty();
        for (int i = 0; i < 10; i++) {
            listInt.add(i);
        }
        expectedInt = 8;
        listInt.removeRange(8, 10);
        actualInt = listInt.size();
        System.out.print("Test 11.1 removeRange");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 11.2 removeRange
        expectedInt = 28;
        actualInt = 0;
        for (int i = 0; i < listInt.size(); i++) {
            actualInt += listInt.get(i);
        }
        System.out.print("Test 11.2 removeRange");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 11.3 removeRange
        expectedInt = 0;
        listInt.removeRange(0, listInt.size());
        actualInt = listInt.size();
        System.out.print("Test 11.3 removeRange");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 12.1 addFirst
        listInt.makeEmpty();
        listInt.addFirst(3);
        expectedInt = 3;
        actualInt = listInt.get(0);
        System.out.print("Test 12.1 addFirst");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 12.2 addFirst
        listInt.addFirst(2);
        expectedInt = 2;
        actualInt = listInt.get(0);
        System.out.print("Test 12.2 addFirst");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 12.3 addFirst
        listInt.addFirst(1);
        expectedInt = 6;
        actualInt = 0;
        for (int i = 0; i < listInt.size(); i++) {
            actualInt += listInt.get(i);
        }
        System.out.print("Test 12.3 addFirst");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 13.1 addLast
        listInt.makeEmpty();
        listInt.addLast(3);
        expectedInt = 3;
        actualInt = listInt.get(listInt.size() - 1);
        System.out.print("Test 13.1 addLast");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 13.2 addLast
        listInt.addLast(2);
        expectedInt = 2;
        actualInt = listInt.get(listInt.size() - 1);
        System.out.print("Test 13.2 addLast");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 13.3 addLast
        listInt.addLast(1);
        expectedInt = 6;
        actualInt = 0;
        for (int i = 0; i < listInt.size(); i++) {
            actualInt += listInt.get(i);
        }
        System.out.print("Test 13.3 addLast");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 14.1 removeFirst
        listInt.removeFirst();
        expectedInt = 2;
        actualInt = listInt.get(0);
        System.out.print("Test 14.1 removeFirst");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 14.2 removeFirst
        listInt.removeFirst();
        expectedInt = 1;
        actualInt = listInt.get(0);
        System.out.print("Test 14.2 removeFirst");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 14.3 removeFirst
        listInt.removeFirst();
        expectedInt = 0;
        actualInt = listInt.size();
        System.out.print("Test 14.3 removeFirst");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 15.1 removeLast
        listInt.makeEmpty();
        for (int i = 0; i < 3; i++) {
            listInt.add(i);
        }
        System.out.print("Test 15.1 removeLast");
        listInt.removeLast();
        expectedInt = 1;
        actualInt = listInt.get(listInt.size() - 1);
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 15.2 removeLast
        listInt.removeLast();
        expectedInt = 0;
        actualInt = listInt.get(listInt.size() - 1);
        System.out.print("Test 15.2 removeLast");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 15.3 removeLast
        listInt.removeLast();
        expectedInt = 0;
        actualInt = listInt.size();
        System.out.print("Test 15.3 removeLast");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 16.1 toString
        listStr.makeEmpty();
        listStr.add("Hello");
        listStr.add("it's me");
        listStr.add("It's Adele");
        expectedStr = "[Hello, it's me, It's Adele]";
        actualStr = listStr.toString();
        System.out.print("Test 16.1 toString");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 16.2 toString
        listStr.makeEmpty();
        listStr.add("Hello");
        listStr.add("it's me");
        listStr.add("It's Adele");
        listStr.add("Or nah");
        expectedStr = "[Hello, it's me, It's Adele, Or nah]";
        actualStr = listStr.toString();
        System.out.print("Test 16.2 toString");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 16.3 toString
        listStr.makeEmpty();
        expectedStr = "[]";
        actualStr = listStr.toString();
        System.out.print("Test 16.3 toString");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 17.1 equals
        listInt.makeEmpty();
        listInt.add(100);
        Object obj = new Object();
        expectedBool = false;
        actualBool = listInt.equals(obj);
        System.out.print("Test 17.1 equals");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 17.2 equals
        LinkedList<Double>  listDbl = new LinkedList<Double>();
        listDbl.makeEmpty();
        listDbl.add(100.0);
        expectedBool = false;
        actualBool = listInt.equals(listStr);
        System.out.print("Test 17.2 equals");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
        
        // test 17.3 equals
        LinkedList<Integer> listIntTwo = new LinkedList<Integer>();
        listInt.makeEmpty();
        for (int i = 0; i < 100; i++) {
            listInt.add(i + i/5 + i*100%7);
            listIntTwo.add(i + i/5 + i*100%7);
        }
        expectedBool = true;
        actualBool = listInt.equals(listIntTwo);
        System.out.print("Test 17.3 equals");
        if (actualInt == expectedInt)
            System.out.println(" - Passed");
        else
            System.out.println(" - Failed");
    }
}
